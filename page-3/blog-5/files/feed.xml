<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" 
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
    xmlns:admin="http://webns.net/mvcb/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">
	<channel>
<title>My RSS Feed</title><link>https://lipengyuan1994.github.io/index.html</link><description>Hot News&#x21;</description><dc:language>en</dc:language><language>en</language><dc:date>2019-01-16T12:23:40-05:00</dc:date><admin:generatorAgent rdf:resource="http://www.realmacsoftware.com/" />
<sy:updatePeriod>hourly</sy:updatePeriod>
<sy:updateFrequency>1</sy:updateFrequency>
<sy:updateBase>2000-01-01T12:00+00:00</sy:updateBase>
<lastBuildDate>Wed, 16 Jan 2019 09:57:31 -0500</lastBuildDate><item><title>Face recognition for entrance lock</title><category>C Project</category><dc:date>2019-01-16T12:23:40-05:00</dc:date><link>https://lipengyuan1994.github.io/page-3/blog-5/files/fd0d7f542c73a4c4964d713ff48e8088-3.html#unique-entry-id-3</link><guid isPermaLink="true">https://lipengyuan1994.github.io/page-3/blog-5/files/fd0d7f542c73a4c4964d713ff48e8088-3.html#unique-entry-id-3</guid><content:encoded><![CDATA[<ul class="disc"><li>A course project in Deep learning specialization instructed by Andrew Ng<span style="font:12px PingFangSC-Regular; ">.</span></li><li>Solved two main problem: Face Verification " Is this the claimed person?" and Face Recognition " Who is this person?".</li><li>Implement the triplet loss function.</li><li>Used transfer learning with a pertained model to map face images into 128-dimensional encodings.</li><li>Used these encodings to perform face verification and face recognition.</li><li>Uploaded code on GitHub: <a href="https://github.com/lipengyuan1994/Deep-Learning-Specialization/blob/master/Convolutional%20Neural%20Networks/Week4/Face%20Recognition/Face%20Recognition%20for%20the%20Happy%20House%20-%20v2.ipynb" rel="external">Link</a></li></ul>]]></content:encoded></item><item><title>Titanic: Predict survival on the Titanic</title><category>Kaggle</category><dc:date>2019-01-06T10:59:09-05:00</dc:date><link>https://lipengyuan1994.github.io/page-3/blog-5/files/14556132e92a38d03090bea8a5c54575-2.html#unique-entry-id-2</link><guid isPermaLink="true">https://lipengyuan1994.github.io/page-3/blog-5/files/14556132e92a38d03090bea8a5c54575-2.html#unique-entry-id-2</guid><content:encoded><![CDATA[Competition <a href="https://www.kaggle.com/c/titanic" rel="external">Link</a><br /><br />Project description:<br /><ul class="disc"><li>Participated Titanic survival prediction on Kaggle and ranked as top 12% (1215th/10364)</li><li>Performed feature engineering on features,  edited, combined and drop features to make better prediction.</li><li>Fitted data into different models ( Linear Regression, SVC, KNN, decision tree, random forest, GBDT, xGBoost, LGB), and compared cross validation scores on different models.</li><li>GridSearch on xGBoost model with parallel computing on a virtual computing machine on Google Cloud Platform.</li><li>Uploaded code on GitHub: <a href="https://github.com/lipengyuan1994/Kaggle/blob/master/Titanic/Titanic%200.803823.ipynb" rel="external">Link</a></li></ul>]]></content:encoded></item><item><title>Yelp Customer Review Sentiment Analysis (Python/ NLP/ PCA / Recommender/AWS)</title><category>P Project</category><dc:date>2019-01-01T10:23:32-05:00</dc:date><link>https://lipengyuan1994.github.io/page-3/blog-5/files/bce9ad9e4f9260ce8fe550b200a21a0d-0.html#unique-entry-id-0</link><guid isPermaLink="true">https://lipengyuan1994.github.io/page-3/blog-5/files/bce9ad9e4f9260ce8fe550b200a21a0d-0.html#unique-entry-id-0</guid><content:encoded><![CDATA[Jun 2018 &ndash; Dec 2018<br /><br />Project description:<br /><ul class="disc"><li>Used NPL techniques: stemming, lemmatization, and TF-IDF, to extract features from unstructured review text data ( more than 450,000 rows).</li><li>Built language understanding models to classify positive and negative reviews using NLP techniques, Logistic Regression and Random Forests, being able to understand business performance based on user review text and comments.</li><li>Used unsupervised learning to cluster users into groups. Identify and understand the common user preference within each of the group by inspecting the cluster centroid.</li><li>Built a item-item based restaurant recommender system using collaborative filtering and matrix factorization based on user's past visits and ratings.</li><li>Built a customer-customer based restaurant recommender system using the computed cosine simiarity on customers.</li><li>Built a popularity based restaurtant recommender system, which computed based on the popularity of the resaturant. </li><li>Upload code repository to Github: <a href="https://github.com/lipengyuan1994/Yelp_data_challenge">[</a><a href="https://github.com/lipengyuan1994/Yelp_data_challenge">Yelp data challenge</a><a href="https://github.com/lipengyuan1994/Yelp_data_challenge">]</a></li><li>Find the google doc copy of the project paper here:  <a href="https://docs.google.com/document/d/1bd5ZwaunUldMiPeMsv91F6FJ5JV2eeWJqfxsxDFwaaQ/edit?usp=sharing" rel="external">[Yelp data challenge]</a></li><li><a href="../../page-3/" title="YELP ">Showcase</a> </li><li> <a href="https://www.youtube.com/watch?v=cITLRr4Cn6U" rel="external">Video presentation of this project</a></li></ul>]]></content:encoded></item></channel>
</rss>